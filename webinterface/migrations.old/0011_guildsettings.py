# Generated by Django 2.1.3 on 2018-11-13 16:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('webinterface', '0010_auto_20181113_1456'),
    ]

    operations = [
        migrations.CreateModel(
            name='GuildSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('automod_enable', models.BooleanField(default=False, verbose_name='enable Automod')),
                ('automod_delete_message_score', models.FloatField(default=1.5, verbose_name='automod score to delete messages (set to 0 to disable)')),
                ('automod_warn_score', models.FloatField(default=2, verbose_name='automod score to warn the author of a message (set to 0 to disable)')),
                ('automod_kick_score', models.FloatField(default=0, verbose_name='automod score to kick the author of a message (set to 0 to disable)')),
                ('automod_softban_score', models.FloatField(default=7, verbose_name='automod score to softban the author of a message (set to 0 to disable)')),
                ('automod_ban_score', models.FloatField(default=10, verbose_name='automod score to ban the author of a message (set to 0 to disable)')),
                ('automod_ignore_level', models.IntegerField(default=2, verbose_name='minimum bot level required for automod to ignore you')),
                ('bot_prefix', models.CharField(max_length=15, verbose_name='bot prefix')),
                ('guild', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='_settings', to='webinterface.DiscordGuild')),
                ('permissions_admins', models.ManyToManyField(related_name='admin_status', to='webinterface.DiscordUser', verbose_name='additional admins')),
                ('permissions_banned', models.ManyToManyField(related_name='banned_status', to='webinterface.DiscordUser', verbose_name='additional banned users')),
                ('permissions_moderators', models.ManyToManyField(related_name='moderator_status', to='webinterface.DiscordUser', verbose_name='additional moderators')),
                ('permissions_trusted', models.ManyToManyField(related_name='trusted_status', to='webinterface.DiscordUser', verbose_name='additional trusted users')),
            ],
        ),
    ]
